import React from "react";

class ToastIcon extends React.Component {
  getViewBox() {
    switch (this.props.name) {
      case "addresscard":
        return "0 0 40 30";
      case "telescope":
        return "0 0 100 100";
      default:
        return "0 0 24 24";
    }
  }

  getPath() {
    switch (this.props.name) {
      case "addresscard":
        return (
          <path
            d="M16.4198 15.2169L16.463 15.6049L16.8498 15.6571C18.7333 15.9113 20.3383 16.4642 21.4572 17.1827C22.5877 17.9087 23.1364 18.741 23.1364 19.5455V23.1364H5.95455V19.5455C5.95455 18.741 6.50317 17.9087 7.63373 17.1827C8.75266 16.4642 10.3577 15.9113 12.2412 15.6571L12.6282 15.6048L12.6713 15.2166L12.6971 14.9833L12.7302 14.6846L12.482 14.5152C11.3102 13.7155 10.5 12.2643 10.5 10.5682C10.5 7.96307 12.3649 5.95455 14.5455 5.95455C16.726 5.95455 18.5909 7.96307 18.5909 10.5682C18.5909 12.2644 17.7808 13.7155 16.6089 14.5152L16.3606 14.6847L16.3938 14.9835L16.4198 15.2169ZM21.8182 22.3182H22.3182V21.8182V19.5455C22.3182 19.1671 22.1044 18.8199 21.8484 18.5412C21.5798 18.2488 21.2013 17.9617 20.7342 17.6976C19.7974 17.1678 18.4481 16.6984 16.7404 16.4679L15.7199 16.3302L15.4933 14.2859L16.1477 13.8394L15.8864 13.4564L16.1477 13.8394C17.1694 13.1423 17.7727 11.8822 17.7727 10.5682C17.7727 8.56757 16.4098 6.77273 14.5455 6.77273C12.6811 6.77273 11.3182 8.56757 11.3182 10.5682C11.3182 11.8822 11.9216 13.1423 12.9431 13.8394L12.9432 13.8394L13.5976 14.2859L13.371 16.3302L12.3506 16.4679C10.6428 16.6984 9.29353 17.1678 8.35671 17.6976C7.88962 17.9617 7.51115 18.2488 7.24254 18.5412C6.9865 18.8199 6.77273 19.1671 6.77273 19.5455V21.8182V22.3182H7.27273H21.8182ZM3.63636 0.5H36.3636C38.0958 0.5 39.5 1.90423 39.5 3.63636V25.4545C39.5 27.1867 38.0958 28.5909 36.3636 28.5909H3.63636C1.90423 28.5909 0.5 27.1867 0.5 25.4545V3.63636C0.5 1.90423 1.90423 0.5 3.63636 0.5ZM36.3636 27.7727C37.6423 27.7727 38.6818 26.7332 38.6818 25.4545V3.63636C38.6818 2.35769 37.6423 1.31818 36.3636 1.31818H3.63636C2.35769 1.31818 1.31818 2.35769 1.31818 3.63636V25.4545C1.31818 26.7332 2.35769 27.7727 3.63636 27.7727H36.3636ZM25.9545 7.77273H34.0455V8.59091H25.9545V7.77273ZM25.9545 13.2273H34.0455V14.0455H25.9545V13.2273ZM29.5909 18.6818H34.0455V19.5H29.5909V18.6818Z"
            {...this.props}
          />
        );
      case "barchart":
        return (
          <React.Fragment>
            <line x1="18" y1="20" x2="18" y2="10" {...this.props}></line>
            <line x1="12" y1="20" x2="12" y2="4" {...this.props}></line>
            <line x1="6" y1="20" x2="6" y2="14" {...this.props}></line>
          </React.Fragment>
        );
      case "checkcircle":
        return (
          <React.Fragment>
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" {...this.props}></path>
            <polyline points="22 4 12 14.01 9 11.01" {...this.props}></polyline>
          </React.Fragment>
        );

      case "dollarsign":
        return (
          <React.Fragment>
            <line x1="12" y1="1" x2="12" y2="23" {...this.props}></line>
            <path
              d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"
              {...this.props}
            ></path>
          </React.Fragment>
        );
      case "ellipsis":
        return (
          <React.Fragment>
            <circle cx="12" cy="12" r="1" {...this.props}></circle>
            <circle cx="19" cy="12" r="1" {...this.props}></circle>
            <circle cx="5" cy="12" r="1" {...this.props}></circle>
          </React.Fragment>
        );
      case "helpcircle":
        return (
          <React.Fragment>
            <circle cx="12" cy="12" r="10" {...this.props}></circle>
            <path
              d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
              {...this.props}
            ></path>
            <line x1="12" y1="17" x2="12.01" y2="17" {...this.props}></line>
          </React.Fragment>
        );
      case "lock":
        return (
          <React.Fragment>
            <rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect>
            <path d="M7 11V7a5 5 0 0 1 10 0v4" {...this.props}></path>
          </React.Fragment>
        );
      case "power":
        return (
          <React.Fragment>
            <path d="M18.36 6.64a9 9 0 1 1-12.73 0" {...this.props}></path>
            <line x1="12" y1="2" x2="12" y2="12" {...this.props}></line>
          </React.Fragment>
        );
      case "search":
        return (
          <React.Fragment>
            <circle cx="11" cy="11" r="8" {...this.props}></circle>
            <line x1="21" y1="21" x2="16.65" y2="16.65" {...this.props}></line>
          </React.Fragment>
        );
      case "sliders":
        return (
          <React.Fragment>
            <line x1="4" y1="21" x2="4" y2="14" {...this.props}></line>
            <line x1="4" y1="10" x2="4" y2="3" {...this.props}></line>
            <line x1="12" y1="21" x2="12" y2="12" {...this.props}></line>
            <line x1="12" y1="8" x2="12" y2="3" {...this.props}></line>
            <line x1="20" y1="21" x2="20" y2="16" {...this.props}></line>
            <line x1="20" y1="12" x2="20" y2="3" {...this.props}></line>
            <line x1="1" y1="14" x2="7" y2="14" {...this.props}></line>
            <line x1="9" y1="8" x2="15" y2="8" {...this.props}></line>
            <line x1="17" y1="16" x2="23" y2="16" {...this.props}></line>
          </React.Fragment>
        );
      case "telescope":
        return (
          <React.Fragment>
            <path
              d="M99.8784 20.5783L91.7627 0.985669C91.4255 0.171418 90.4919 -0.215601 89.6778 0.122057L62.7974 11.2565C61.9831 11.5937 61.5963 12.5273 61.9337 13.3413L62.1454 13.8524L18.2838 32.0204C17.8927 32.1823 17.5821 32.4929 17.4202 32.884C17.258 33.2751 17.258 33.7142 17.4202 34.1053L17.6319 34.6165L0.98558 41.512C0.171329 41.8493 -0.215477 42.7829 0.121968 43.5969L4.9479 55.2477C5.10981 55.6388 5.42045 55.9494 5.81151 56.1113C6.00704 56.1922 6.2147 56.2328 6.42214 56.2328C6.62959 56.2328 6.83725 56.1924 7.03278 56.1113L23.6793 49.2162L23.891 49.7275C24.1455 50.342 24.7395 50.713 25.3659 50.713C25.5693 50.713 25.7763 50.6739 25.9759 50.5911L65.4146 34.2551C66.2288 33.9178 66.6156 32.9842 66.2782 32.1702C65.941 31.3559 65.0078 30.9689 64.1933 31.3066L26.2286 47.032L20.9791 34.3589L63.3667 16.8015L70.049 32.9344C70.2109 33.3255 70.5216 33.6361 70.9126 33.798C71.1082 33.8789 71.3158 33.9195 71.5233 33.9195C71.7307 33.9195 71.9384 33.8791 72.1339 33.798L78.0303 31.3557C78.0317 31.3551 99.0146 22.6636 99.0146 22.6636C99.4057 22.5017 99.7163 22.1911 99.8782 21.8C100.041 21.4085 100.041 20.9694 99.8784 20.5783ZM22.458 46.2675L7.28576 52.552L3.68131 43.8497L18.8536 37.5653L22.458 46.2675ZM72.3869 30.2385L65.7046 14.1058C65.7044 14.1056 65.4929 13.5945 65.4929 13.5945L68.4416 12.3731L75.3356 29.017L72.3869 30.2385ZM78.2841 27.7957L71.3901 11.1518L89.4253 3.6814L96.3195 20.3253L78.2841 27.7957Z"
              {...this.props}
            />
            <path
              d="M60.0973 68.1239H60.1249C61.0064 68.1239 61.7207 67.4095 61.7207 66.5282C61.7207 65.6469 61.0064 64.9325 60.1249 64.9325H59.2098L57.7599 59.7178C57.5679 59.0274 56.9392 58.5495 56.2224 58.5495H51.5954V46.8881L56.8328 44.7185C57.6471 44.3813 58.0339 43.4477 57.6964 42.6337C57.359 41.8196 56.4258 41.4328 55.6116 41.77L49.3867 44.3485C49.382 44.3505 49.3771 44.3524 49.3724 44.3545L43.1661 46.9253C42.3518 47.2626 41.965 48.1962 42.3025 49.0102C42.557 49.6247 43.151 49.9957 43.7774 49.9957C43.9808 49.9957 44.1878 49.9566 44.3874 49.8738L48.4037 48.2102V58.5497H43.7767C43.0601 58.5497 42.4314 59.0276 42.2393 59.718L40.7893 64.9327H39.8742C38.9927 64.9327 38.2785 65.6471 38.2785 66.5284C38.2785 67.4097 38.9927 68.1242 39.8742 68.1242H39.9019L31.6011 97.9776C31.3649 98.8267 31.8619 99.7063 32.711 99.9425C33.5598 100.178 34.4398 99.6814 34.6757 98.8325L43.2144 68.1242H48.4037V98.405C48.4037 99.2863 49.118 100.001 49.9995 100.001C50.881 100.001 51.5952 99.2863 51.5952 98.405V68.1239H56.7845L65.3232 98.8323C65.5196 99.5384 66.1611 100.001 66.8598 100.001C67.0013 100.001 67.1451 99.9821 67.2881 99.9423C68.1372 99.7061 68.6343 98.8263 68.3981 97.9774L60.0973 68.1239ZM44.1023 64.9325L44.9897 61.741H55.0101L55.8975 64.9325H44.1023Z"
              {...this.props}
            />
          </React.Fragment>
        );
      case "trash":
        return (
          <React.Fragment>
            <polyline points="3 6 5 6 21 6" {...this.props}></polyline>
            <path
              d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
              {...this.props}
            ></path>
            <line x1="10" y1="11" x2="10" y2="17" {...this.props}></line>
            <line x1="14" y1="11" x2="14" y2="17" {...this.props}></line>
          </React.Fragment>
        );
      case "user":
        return (
          <React.Fragment>
            <path
              d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"
              {...this.props}
            />
            <circle cx="12" cy="7" r="4" {...this.props}></circle>
          </React.Fragment>
        );
      case "users":
        return (
          <React.Fragment>
            <path
              d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
              {...this.props}
            ></path>
            <circle cx="9" cy="7" r="4" {...this.props}></circle>
            <path d="M23 21v-2a4 4 0 0 0-3-3.87" {...this.props}></path>
            <path d="M16 3.13a4 4 0 0 1 0 7.75" {...this.props}></path>
          </React.Fragment>
        );
      case "x":
        return (
          <React.Fragment>
            <line x1="18" y1="6" x2="6" y2="18" {...this.props}></line>
            <line x1="6" y1="6" x2="18" y2="18" {...this.props}></line>
          </React.Fragment>
        );
      default:
        return <path />;
    }
  }

  render() {
    return (
      <svg
        width={this.props.width || 24}
        height={this.props.height || 24}
        fill={this.props.fill || "none"}
        stroke={this.props.stroke || "var(--toast-neutral-1)"}
        strokeWidth={this.props.strokeWidth || 2}
        strokeLinecap="round"
        strokeLinejoin="round"
        xmlns="http://www.w3.org/2000/svg"
        viewBox={this.getViewBox()}
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <defs>
          <linearGradient id="grad">
            <stop offset="10%" stopColor="var(--toast-purple-2)" />
            <stop offset="90%" stopColor="var(--toast-blue-1)" />
          </linearGradient>
        </defs>
        {this.getPath()}
      </svg>
    );
  }
}

export default ToastIcon;
